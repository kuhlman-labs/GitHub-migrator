# GitHub Migrator - Environment Variables Template
# Copy this file to .env in the project root and fill in your values

# =============================================================================
# IMPORTANT: Supported Migrations
# =============================================================================
# Only GitHub to GitHub migrations are currently supported
# Source: GitHub.com or GitHub Enterprise Server
# Destination: GitHub.com, GitHub with data residency, or GitHub Enterprise Server

# =============================================================================
# Source Repository System Configuration
# =============================================================================

# Source system type (only "github" is supported)
GHMIG_SOURCE_TYPE=github
SOURCE_TYPE=github

# --- GitHub Source Configuration ---
# Source GitHub Personal Access Token (PAT) - REQUIRED
# This token is REQUIRED for all migration operations
# For GitHub Enterprise Server or GitHub.com
# Required permissions:
# - Organization admin access (required)
# - Scopes: repo, read:org, read:user, admin:org
# Usage: If GitHub App is configured, PAT is used for migrations only
GITHUB_SOURCE_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
GHMIG_SOURCE_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Source GitHub Base URL
# For GitHub Enterprise Server: https://github.company.com/api/v3
# For GitHub.com: https://api.github.com
GITHUB_SOURCE_URL=https://github.company.com/api/v3
GHMIG_SOURCE_BASE_URL=https://github.company.com/api/v3

# --- GitHub App Source Authentication (Optional) ---
# GitHub App authentication is OPTIONAL and recommended for large migrations
# When configured, GitHub App tokens are used ONLY for discovery and profiling operations
# The PAT above is still REQUIRED and used for all migration operations
# Benefits: Better rate limits for discovery, separation of concerns, reduced PAT usage
# GHMIG_SOURCE_APP_ID=123456
# GHMIG_SOURCE_APP_PRIVATE_KEY=/path/to/private-key.pem
# Or inline PEM:
# GHMIG_SOURCE_APP_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\nMIIE...\n-----END RSA PRIVATE KEY-----"
# GHMIG_SOURCE_APP_INSTALLATION_ID=789012

# =============================================================================
# Destination Repository System Configuration
# =============================================================================

# Destination system type (only "github" is supported)
GHMIG_DESTINATION_TYPE=github
DESTINATION_TYPE=github

# --- GitHub Destination Configuration ---
# Destination GitHub Personal Access Token (PAT) - REQUIRED
# This token is REQUIRED for all migration operations
# For GitHub.com, GitHub with data residency, GHEC EMU, or GitHub Enterprise Server
# Required permissions:
# - Organization admin access (required)
# - Scopes: repo, admin:org, workflow
# Usage: If GitHub App is configured, PAT is used for migrations only
GITHUB_DEST_TOKEN=ghp_yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
GHMIG_DESTINATION_TOKEN=ghp_yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

# Destination GitHub Base URL
# For GitHub.com or GitHub with data residency: https://api.github.com
# For GitHub Enterprise Server: https://github.company.com/api/v3
GITHUB_DEST_URL=https://api.github.com
GHMIG_DESTINATION_BASE_URL=https://api.github.com

# --- GitHub App Destination Authentication (Optional) ---
# GitHub App authentication is OPTIONAL and recommended for large migrations
# When configured, GitHub App tokens are used ONLY for discovery and profiling operations
# The PAT above is still REQUIRED and used for all migration operations
# Benefits: Better rate limits for discovery, separation of concerns, reduced PAT usage
# GHMIG_DESTINATION_APP_ID=123456
# GHMIG_DESTINATION_APP_PRIVATE_KEY=/path/to/private-key.pem
# Or inline PEM:
# GHMIG_DESTINATION_APP_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\nMIIE...\n-----END RSA PRIVATE KEY-----"
# GHMIG_DESTINATION_APP_INSTALLATION_ID=789012

# =============================================================================
# Server Configuration
# =============================================================================

# Server port (default: 8080)
GHMIG_SERVER_PORT=8080

# =============================================================================
# Database Configuration
# =============================================================================

# Database type: "sqlite" or "postgres"
# - sqlite: Recommended for development and small deployments
# - postgres: Recommended for production
GHMIG_DATABASE_TYPE=sqlite

# Database DSN (Data Source Name)
# SQLite example:
GHMIG_DATABASE_DSN=./data/migrator.db

# PostgreSQL example:
# GHMIG_DATABASE_DSN=postgres://user:password@localhost:5432/migrator?sslmode=disable

# Alternative: Full PostgreSQL URL
# DATABASE_URL=postgres://migrator_user:secure_password@localhost:5432/migrator?sslmode=require

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level: debug, info, warn, error
# - debug: Verbose logging (recommended for development)
# - info: Standard logging (recommended for production)
# - warn: Only warnings and errors
# - error: Only errors
GHMIG_LOGGING_LEVEL=info

# Log format: json or text
# - json: Structured JSON logs (recommended for production)
# - text: Human-readable format (good for development)
GHMIG_LOGGING_FORMAT=json

# Log output file path
GHMIG_LOGGING_OUTPUT_FILE=./logs/migrator.log

# Log file maximum size in megabytes before rotation (default: 100)
GHMIG_LOGGING_MAX_SIZE=100

# Maximum number of old log files to retain (default: 3)
GHMIG_LOGGING_MAX_BACKUPS=3

# Maximum number of days to retain old log files (default: 28)
GHMIG_LOGGING_MAX_AGE=28

# =============================================================================
# Migration Configuration
# =============================================================================

# Note: Destination organization is determined per-repository via the API/UI
# By default, repositories migrate to the same organization name as the source
# You can override this per-repository using the destination_full_name field

# Number of parallel migration workers (default: 5)
# Higher values = faster migrations but more API rate limit usage
# Recommended: 5-10 for most deployments
GHMIG_MIGRATION_WORKERS=5

# Polling interval in seconds (default: 30)
# How often workers check for new repositories to migrate
GHMIG_MIGRATION_POLL_INTERVAL_SECONDS=30

# Post-migration validation mode (default: production_only)
# Options: never, production_only, dry_run_only, always
# Recommended: production_only
GHMIG_MIGRATION_POST_MIGRATION_MODE=production_only

# What to do if destination repository exists (default: fail)
# Options: fail (safest), skip, delete (dangerous!)
# Recommended: fail
GHMIG_MIGRATION_DEST_REPO_EXISTS_ACTION=fail

# =============================================================================
# Authentication & Authorization Configuration (Optional)
# =============================================================================
# IMPORTANT: Authentication is DISABLED by default for backward compatibility
# Enable for production deployments to control who can access the system
# See OPERATIONS.md for OAuth App setup instructions

# Enable/disable authentication (default: false)
# Set to "true" to require GitHub OAuth authentication
GHMIG_AUTH_ENABLED=false

# GitHub OAuth Application Configuration
# Required when GHMIG_AUTH_ENABLED=true
# Create an OAuth App at:
# - GitHub.com: https://github.com/settings/developers
# - GHES: https://your-ghes/settings/developers
# GITHUB_OAUTH_CLIENT_ID=Iv1.abcd1234efgh5678
# GITHUB_OAUTH_CLIENT_SECRET=your-oauth-client-secret-here

# OAuth callback URL
# Must match the callback URL configured in your OAuth App
# Format: https://your-migrator-domain.com/api/v1/auth/callback
# GITHUB_OAUTH_CALLBACK_URL=https://migrator.company.com/api/v1/auth/callback

# Session secret key for JWT signing
# MUST be a strong random string (32+ characters)
# Generate with: openssl rand -base64 32
# IMPORTANT: Keep this secret and don't commit to version control!
# AUTH_SESSION_SECRET=your-random-secret-key-at-least-32-characters-long

# Session duration in hours (default: 24)
# How long users stay logged in before re-authentication required
# GHMIG_AUTH_SESSION_DURATION_HOURS=24

# Authorization Rules (Optional)
# Control WHO can access the system after authentication
# If not specified, any authenticated GitHub user can access

# Require org membership (comma-separated list)
# User must be member of AT LEAST ONE of these organizations
# GHMIG_AUTH_REQUIRE_ORG_MEMBERSHIP=my-company-org,migration-team-org

# Require team membership (comma-separated list, format: org/team-slug)
# User must be member of AT LEAST ONE of these teams
# Team slugs are lowercase with hyphens (e.g., "platform-team")
# GHMIG_AUTH_REQUIRE_TEAM_MEMBERSHIP=my-company-org/migration-admins,my-company-org/platform-team

# Require enterprise admin (default: false)
# If true, only GitHub Enterprise admins can access the system
# GHMIG_AUTH_REQUIRE_ENTERPRISE_ADMIN=false

# Enterprise slug for admin verification
# Required only if GHMIG_AUTH_REQUIRE_ENTERPRISE_ADMIN=true
# GHMIG_AUTH_ENTERPRISE_SLUG=my-enterprise

# =============================================================================
# Important Notes
# =============================================================================

# 1. SUPPORTED MIGRATIONS
#    Only GitHub to GitHub migrations are currently supported.
#    Source: GitHub.com or GitHub Enterprise Server
#    Destination: GitHub.com, GitHub with data residency, or GitHub Enterprise Server
#
# 2. TOKENS MUST HAVE ORGANIZATION ADMIN ACCESS
#    Both source and destination tokens require organization admin permissions
#    for migrations to work properly.
#
# 3. AUTHENTICATION REQUIREMENTS
#    - PAT (Personal Access Token) is REQUIRED for all migrations
#    - GitHub App authentication is OPTIONAL for discovery and profiling operations
#    - When both are configured: GitHub App used for discovery, PAT used for migrations
#    - Benefit of GitHub App: Better rate limits for discovery operations
#
# 4. DESTINATION ORGANIZATION MAPPING
#    The destination organization for each repository can be customized
#    per-repository via the API or web interface. By default, it uses
#    the same organization name as the source.
#
# 5. AUTHENTICATION (OPTIONAL)
#    Authentication is DISABLED by default for backward compatibility.
#    Enable for production to control access via GitHub OAuth.
#    Supports org membership, team membership, or enterprise admin requirements.
#    See OPERATIONS.md for setup instructions.
#
# 6. SENSITIVE VALUES
#    Never commit this file with real tokens, secrets, or keys to version control.
#    Use environment variables or a secrets management system in production.
#    This includes: PAT tokens, OAuth secrets, session secrets, and private keys.
#
# 7. PRODUCTION DEPLOYMENTS
#    For production, use PostgreSQL instead of SQLite, enable authentication,
#    and configure proper log rotation and monitoring.
#
# 8. RATE LIMITS
#    GitHub API rate limits apply. Adjust GHMIG_MIGRATION_WORKERS based on
#    your available rate limit quota. GitHub App authentication provides
#    higher rate limits than PAT-only authentication.
