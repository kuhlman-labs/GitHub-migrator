# GitHub Migration Server - Docker Configuration
# This configuration is optimized for Docker deployments

server:
  port: 8080
  read_timeout: 60s
  write_timeout: 60s

database:
  # Can be overridden with environment variables
  type: "${GHMIG_DATABASE_TYPE:-sqlite}"
  dsn: "${GHMIG_DATABASE_DSN:-/app/data/migrator.db}"
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: 5m

github:
  source:
    base_url: "${GITHUB_SOURCE_URL:-https://github.company.com/api/v3}"
    token: "${GITHUB_SOURCE_TOKEN}"
    graphql_url: "${GITHUB_SOURCE_GRAPHQL_URL:-https://github.company.com/api/graphql}"
  
  destination:
    base_url: "${GITHUB_DEST_URL:-https://api.github.com}"
    token: "${GITHUB_DEST_TOKEN}"
    graphql_url: "${GITHUB_DEST_GRAPHQL_URL:-https://api.github.com/graphql}"
  
  rate_limit:
    requests_per_hour: 5000
    wait_on_exhaustion: true
  
  retry:
    max_attempts: 5
    initial_backoff: 2s
    max_backoff: 60s

logging:
  level: "${GHMIG_LOGGING_LEVEL:-info}"
  format: "${GHMIG_LOGGING_FORMAT:-json}"
  output_file: /app/logs/migrator.log
  max_size: 200
  max_backups: 5
  max_age: 30
  compress: true

migration:
  parallel_workers: "${GHMIG_MIGRATION_WORKERS:-5}"
  timeout: 60m
  dry_run_default: false

discovery:
  parallel_workers: "${GHMIG_DISCOVERY_WORKERS:-10}"
  profile_depth: full
  timeout: 2h

batch:
  max_batch_size: 100
  execution_strategy: parallel

monitoring:
  enabled: true
  health_check_interval: 30s

security:
  cors_enabled: true
  cors_allowed_origins:
    - "*"  # Configure appropriately for production

features:
  self_service_enabled: true
  batch_management_enabled: true
  analytics_enabled: true

