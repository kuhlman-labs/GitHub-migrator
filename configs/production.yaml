# GitHub Migrator - Production Configuration
# This configuration is optimized for production deployments

server:
  port: 8080

database:
  # Use PostgreSQL for production
  type: "${GHMIG_DATABASE_TYPE:-postgresql}"
  dsn: "${DATABASE_URL}"  # postgres://user:pass@host:port/dbname?sslmode=require

# Source repository system configuration
# Only GitHub to GitHub migrations are supported
# Source: GitHub.com or GitHub Enterprise Server
source:
  type: "${GHMIG_SOURCE_TYPE:-github}"
  base_url: "${GITHUB_SOURCE_URL}"
  token: "${GITHUB_SOURCE_TOKEN}"  # REQUIRED for migrations
  
  # GitHub App authentication (optional for discovery/profiling)
  # app_id: "${GITHUB_SOURCE_APP_ID}"
  # app_private_key: "${GITHUB_SOURCE_APP_PRIVATE_KEY}"
  # app_installation_id: "${GITHUB_SOURCE_APP_INSTALLATION_ID}"

# Destination repository system configuration
# Only GitHub to GitHub migrations are supported
# Destination: GitHub.com, GitHub with data residency, or GitHub Enterprise Server
destination:
  type: "${GHMIG_DESTINATION_TYPE:-github}"
  base_url: "${GITHUB_DEST_URL}"
  token: "${GITHUB_DEST_TOKEN}"  # REQUIRED for migrations
  
  # GitHub App authentication (optional for discovery/profiling)
  # app_id: "${GITHUB_DEST_APP_ID}"
  # app_private_key: "${GITHUB_DEST_APP_PRIVATE_KEY}"
  # app_installation_id: "${GITHUB_DEST_APP_INSTALLATION_ID}"

# Migration worker configuration
migration:
  # Higher number of workers for production throughput
  workers: "${GHMIG_MIGRATION_WORKERS:-10}"
  poll_interval_seconds: "${GHMIG_MIGRATION_POLL_INTERVAL_SECONDS:-30}"
  post_migration_mode: "${GHMIG_MIGRATION_POST_MIGRATION_MODE:-production_only}"
  dest_repo_exists_action: "${GHMIG_MIGRATION_DEST_REPO_EXISTS_ACTION:-fail}"

# Production logging - structured JSON format
logging:
  level: "${GHMIG_LOGGING_LEVEL:-info}"  # info, warn, or error for production
  format: "${GHMIG_LOGGING_FORMAT:-json}"  # JSON for production logging systems
  output_file: "${GHMIG_LOGGING_OUTPUT_FILE:-/var/log/github-migrator/migrator.log}"
  max_size: "${GHMIG_LOGGING_MAX_SIZE:-500}"  # Maximum size in megabytes
  max_backups: "${GHMIG_LOGGING_MAX_BACKUPS:-10}"  # Number of old log files to keep
  max_age: "${GHMIG_LOGGING_MAX_AGE:-90}"  # Maximum number of days to keep old log files

# Authentication & Authorization
# RECOMMENDED: Enable for production to control access
# See OPERATIONS.md for OAuth App setup instructions
auth:
  enabled: "${GHMIG_AUTH_ENABLED:-false}"
  github_oauth_client_id: "${GITHUB_OAUTH_CLIENT_ID}"
  github_oauth_client_secret: "${GITHUB_OAUTH_CLIENT_SECRET}"
  callback_url: "${GITHUB_OAUTH_CALLBACK_URL}"
  frontend_url: "${GHMIG_AUTH_FRONTEND_URL:-/}"  # URL to redirect to after login (production: usually same domain)
  session_secret: "${AUTH_SESSION_SECRET}"
  session_duration_hours: "${GHMIG_AUTH_SESSION_DURATION_HOURS:-24}"
  
  authorization_rules:
    # Require org membership (comma-separated list via env var)
    require_org_membership: "${GHMIG_AUTH_REQUIRE_ORG_MEMBERSHIP}"
    # Require team membership (comma-separated list via env var, format: org/team-slug)
    require_team_membership: "${GHMIG_AUTH_REQUIRE_TEAM_MEMBERSHIP}"
    # Require enterprise admin
    require_enterprise_admin: "${GHMIG_AUTH_REQUIRE_ENTERPRISE_ADMIN:-false}"
    # Enterprise slug for admin verification
    require_enterprise_slug: "${GHMIG_AUTH_ENTERPRISE_SLUG}"
