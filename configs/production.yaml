# GitHub Migration Server - Production Configuration
# This configuration is optimized for production deployments

server:
  port: 8080
  read_timeout: 60s
  write_timeout: 60s
  idle_timeout: 120s

database:
  # Use PostgreSQL for production
  type: postgresql
  dsn: "${DATABASE_URL}"  # postgres://user:pass@host:port/dbname?sslmode=require
  max_open_conns: 50
  max_idle_conns: 10
  conn_max_lifetime: 10m
  conn_max_idle_time: 5m

# Source repository system configuration
# Supported types: github, gitlab, azuredevops
source:
  type: "${SOURCE_TYPE:-github}"
  base_url: "${GITHUB_SOURCE_URL}"  # e.g., https://github.company.com/api/v3
  token: "${GITHUB_SOURCE_TOKEN}"
  # For GitLab: base_url would be https://gitlab.company.com
  # For Azure DevOps:
  organization: "${ADO_ORGANIZATION:-}"  # Required for ADO
  username: "${ADO_USERNAME:-}"  # Optional for ADO

# Destination repository system configuration  
# Supported types: github, gitlab
destination:
  type: "${DESTINATION_TYPE:-github}"
  base_url: "${GITHUB_DEST_URL}"  # e.g., https://api.github.com
  token: "${GITHUB_DEST_TOKEN}"

# Legacy GitHub-specific configuration (maintained for backward compatibility)
# The source/destination format above is the recommended approach
github:
  source:
    graphql_url: "${GITHUB_SOURCE_GRAPHQL_URL}"  # e.g., https://github.company.com/api/graphql
  
  destination:
    graphql_url: "${GITHUB_DEST_GRAPHQL_URL}"  # e.g., https://api.github.com/graphql
  
  rate_limit:
    requests_per_hour: 5000
    wait_on_exhaustion: true
    check_interval: 60s
  
  retry:
    max_attempts: 5
    initial_backoff: 2s
    max_backoff: 60s
    multiplier: 2.0

logging:
  level: info  # debug, info, warn, error
  format: json  # json for production, text for development
  output_file: /var/log/github-migrator/migrator.log
  
  # Log rotation settings
  max_size: 500        # Maximum size in megabytes
  max_backups: 10      # Maximum number of old log files to keep
  max_age: 90          # Maximum number of days to keep old log files
  compress: true       # Compress rotated files

migration:
  # Number of parallel migration workers
  parallel_workers: 10
  
  # Maximum time for a single migration
  timeout: 60m
  
  # Default to dry run for safety
  dry_run_default: true
  
  # Retry failed migrations
  retry_failed: true
  max_retries: 3
  retry_delay: 5m

discovery:
  # Number of parallel discovery workers
  parallel_workers: 20
  
  # Profiling depth: basic, standard, full
  profile_depth: full
  
  # Discovery timeout
  timeout: 2h
  
  # Batch size for organization repository listing
  batch_size: 100

batch:
  # Maximum repositories per batch
  max_batch_size: 100
  
  # Batch execution strategy: sequential, parallel
  execution_strategy: parallel
  
  # Maximum parallel batch executions
  max_parallel_batches: 3

# Circuit breaker settings
circuit_breaker:
  max_requests: 100
  interval: 60s
  timeout: 30s
  max_consecutive_failures: 5

# Monitoring and metrics (future)
monitoring:
  enabled: true
  prometheus_port: 9090
  health_check_interval: 30s

# Security settings
security:
  # Enable CORS
  cors_enabled: true
  cors_allowed_origins:
    - "https://migrator.company.com"
    - "https://admin.company.com"
  
  # API rate limiting (future)
  api_rate_limit:
    enabled: false
    requests_per_minute: 100
  
  # Authentication (future)
  auth:
    enabled: false
    provider: "oauth2"  # oauth2, jwt, api_key

# Feature flags
features:
  # Enable self-service migration
  self_service_enabled: true
  
  # Enable batch management
  batch_management_enabled: true
  
  # Enable analytics
  analytics_enabled: true
  
  # Enable webhooks (future)
  webhooks_enabled: false

